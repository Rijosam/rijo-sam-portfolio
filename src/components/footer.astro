<footer class="w-full py-12 border-t border-[#ffffff10]">
  <div class="mt-12 pt-8">
    <p class="text-center text-sm text-[var(--white-icon)] space-y-2">
      <span class="block sm:inline">
        Copyright Â© 2025
        <a href="https://github.com/RijoSam">Rijo Sam</a>. All rights reserved.
      </span>
    </p>
  </div>
</footer>

<!-- Theme Toggle Button -->
<div class="fixed top-6 right-6 z-50">
  <button
    id="theme-toggle"
    class="flex items-center justify-center w-12 h-12 rounded-full bg-[var(--background-secondary)] border border-[#ffffff10] hover:border-[#ffffff20] transition-all duration-200 shadow-lg hover:shadow-xl"
    aria-label="Toggle theme"
  >
    <!-- Sun Icon (Light Mode) -->
    <svg id="sun-icon" class="w-5 h-5 text-[var(--white-icon)] hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <circle cx="12" cy="12" r="5"></circle>
      <path d="M12 1v2m0 18v2M4.22 4.22l1.42 1.42m12.72 12.72l1.42 1.42M1 12h2m18 0h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42"></path>
    </svg>

    <!-- Moon Icon (Dark Mode) -->
    <svg id="moon-icon" class="w-5 h-5 text-[var(--white-icon)]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
    </svg>
  </button>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const themeToggle = document.getElementById("theme-toggle");
    const sunIcon = document.getElementById("sun-icon");
    const moonIcon = document.getElementById("moon-icon");
    const body = document.body;

    // Function to update icons based on theme
    function updateIcons(theme) {
      if (theme === "light") {
        sunIcon.classList.remove("hidden");
        moonIcon.classList.add("hidden");
        body.classList.add("light");
      } else {
        sunIcon.classList.add("hidden");
        moonIcon.classList.remove("hidden");
        body.classList.remove("light");
      }
    }

    // Get system preference
    const getSystemTheme = () => (window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light");

    // Get initial theme (localStorage or system preference)
    const storedTheme = localStorage.getItem("theme");
    const initialTheme = storedTheme || getSystemTheme();

    updateIcons(initialTheme);

    // Listen for system theme changes if no stored preference
    if (!storedTheme) {
      window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (e) => {
        const systemTheme = e.matches ? "dark" : "light";
        updateIcons(systemTheme);
      });
    }

    // Theme toggle click handler
    themeToggle.addEventListener("click", () => {
      const currentTheme = body.classList.contains("light") ? "light" : "dark";
      const newTheme = currentTheme === "light" ? "dark" : "light";

      updateIcons(newTheme);
      localStorage.setItem("theme", newTheme);
    });
  });
</script>
